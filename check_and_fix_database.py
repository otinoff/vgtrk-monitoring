#!/usr/bin/env python3
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É
"""

import sqlite3
import os

def check_and_fix_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    db_path = "data/vgtrk_monitoring.db"
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("data", exist_ok=True)
    
    print("=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã filials
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='filials'")
        if not cursor.fetchone():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ filials –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–æ–∑–¥–∞—ë–º...")
            create_filials_table(conn)
        else:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ filials —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(filials)")
        columns = cursor.fetchall()
        existing_columns = {col[1]: col[2] for col in columns}
        
        print("\nüìä –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ:")
        for col_name, col_type in existing_columns.items():
            print(f"  - {col_name} ({col_type})")
        
        # 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        required_columns = {
            'id': 'INTEGER PRIMARY KEY AUTOINCREMENT',
            'name': 'TEXT',
            'federal_district': 'TEXT',
            'region': 'TEXT',
            'website': 'TEXT',  # –í–Ω–∏–º–∞–Ω–∏–µ: website, –∞ –Ω–µ website_url!
            'sitemap_url': 'TEXT',
            'is_active': 'INTEGER DEFAULT 1',
            'region_code': 'TEXT'
        }
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫...")
        missing_columns = []
        
        for col_name, col_type in required_columns.items():
            if col_name not in existing_columns:
                missing_columns.append((col_name, col_type))
                print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–æ–Ω–∫–∞: {col_name}")
        
        if missing_columns:
            print("\nüìù –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏...")
            for col_name, col_type in missing_columns:
                if col_name != 'id':  # id –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ ALTER TABLE
                    try:
                        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                        default_value = ""
                        if col_type.startswith('INTEGER'):
                            default_value = " DEFAULT 0"
                            if 'is_active' in col_name:
                                default_value = " DEFAULT 1"
                        elif col_type.startswith('TEXT'):
                            default_value = " DEFAULT ''"
                        
                        sql = f"ALTER TABLE filials ADD COLUMN {col_name} {col_type.split(' ')[0]}{default_value}"
                        cursor.execute(sql)
                        conn.commit()
                        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞: {col_name}")
                    except sqlite3.OperationalError as e:
                        print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å {col_name}: {e}")
        else:
            print("  ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT COUNT(*) FROM filials")
        count = cursor.fetchone()[0]
        print(f"\nüìà –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {count}")
        
        if count == 0:
            print("  ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å init_database.py")
        
        # 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        print("\n‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´:")
        cursor.execute("PRAGMA table_info(filials)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"  - {col[1]} ({col[2]})")
        
        print("\n" + "=" * 60)
        print("‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("\n–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É...")
        try:
            cursor.execute("DROP TABLE IF EXISTS filials")
            create_filials_table(conn)
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        except Exception as e2:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É: {e2}")
    
    finally:
        conn.close()

def create_filials_table(conn):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É filials —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS filials (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            federal_district TEXT,
            region TEXT,
            website TEXT,
            sitemap_url TEXT,
            is_active INTEGER DEFAULT 1,
            region_code TEXT
        )
    """)
    conn.commit()
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ filials —Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")

if __name__ == "__main__":
    check_and_fix_database()
    print("\nüí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–Ω–æ–≤–∞!")
    print("   –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è, –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("   python3 init_database.py")