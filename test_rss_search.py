#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ RSS –ø–æ–∏—Å–∫–∞.
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å RSS –ø–∞—Ä—Å–∏–Ω–≥–∞.
"""

import sys
import os
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'modules'))

from modules.site_parser import SiteParser
from modules.advanced_logger import LogLevel

def test_rss_search():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RSS –ø–æ–∏—Å–∫–∞"""
    
    print("=" * 70)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï RSS –ü–û–ò–°–ö–ê")
    print("=" * 70)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞
    parser = SiteParser(log_level=LogLevel.INFO)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∞–π—Ç—ã —Å RSS
    test_sites = [
        "https://vesti42.ru",
        "https://vesti-novosibirsk.ru",
        "https://stavropolye.tv",
        "https://vesti-kaliningrad.ru"
    ]
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
    keywords = ["–≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä", "–Ω–æ–≤–æ—Å—Ç–∏", "—Ä–∞–∑–≤–∏—Ç–∏–µ", "–í–ì–¢–†–ö", "—Ä–µ–≥–∏–æ–Ω"]
    
    print(f"\n–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: {', '.join(keywords)}")
    print("-" * 70)
    
    for site in test_sites:
        print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∞–π—Ç: {site}")
        print("-" * 50)
        
        # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è
        start_time = time.time()
        
        # –ü–∞—Ä—Å–∏–º RSS
        rss_data, metrics = parser.parse_rss_feed(site)
        
        rss_time = time.time() - start_time
        
        if rss_data:
            print(f"‚úÖ RSS —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!")
            print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è: {rss_time:.2f} —Å–µ–∫")
            print(f"   üì∞ –ù–æ–≤–æ—Å—Ç–µ–π: {metrics.get('items_count', 0)}")
            print(f"   üìç RSS URL: {metrics.get('rss_url', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
            
            # –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ RSS
            search_results = parser.search_in_rss(rss_data, keywords)
            
            print(f"\n   üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
            for keyword, found_items in search_results.items():
                if found_items:
                    print(f"      ‚úÖ '{keyword}': –Ω–∞–π–¥–µ–Ω–æ –≤ {len(found_items)} –Ω–æ–≤–æ—Å—Ç—è—Ö")
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
                    if found_items:
                        first = found_items[0]
                        print(f"         –ü—Ä–∏–º–µ—Ä: {first['title'][:60]}...")
                else:
                    print(f"      ‚ùå '{keyword}': –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–±—ã—á–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º
            print(f"\n   üìä –°–†–ê–í–ù–ï–ù–ò–ï –° –û–ë–´–ß–ù–´–ú –ü–ê–†–°–ò–ù–ì–û–ú:")
            start_time = time.time()
            full_content, full_metrics = parser.parse_site(site)
            full_time = time.time() - start_time
            
            if full_content:
                speedup = full_time / rss_time if rss_time > 0 else 0
                print(f"      –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥: {full_time:.2f} —Å–µ–∫")
                print(f"      RSS –ø–∞—Ä—Å–∏–Ω–≥: {rss_time:.2f} —Å–µ–∫")
                print(f"      üöÄ –£–°–ö–û–†–ï–ù–ò–ï: {speedup:.1f}x –±—ã—Å—Ç—Ä–µ–µ!")
                
                # –≠–∫–æ–Ω–æ–º–∏—è –ø–æ —Ä–∞–∑–º–µ—Ä—É –¥–∞–Ω–Ω—ã—Ö
                rss_size = sum(len(item.get('full_text', '')) for item in rss_data.get('items', []))
                full_size = len(full_content)
                savings = (1 - rss_size / full_size) * 100 if full_size > 0 else 0
                print(f"      üí∞ –≠–ö–û–ù–û–ú–ò–Ø –î–ê–ù–ù–´–•: {savings:.1f}%")
        else:
            print(f"‚ùå RSS –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {metrics.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        
        print("\n" + "=" * 70)
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–∞–π—Ç–∞–º–∏

def test_rss_with_gigachat_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ RSS —Å –∞–Ω–∞–ª–∏–∑–æ–º —á–µ—Ä–µ–∑ GigaChat"""
    
    print("\n" + "=" * 70)
    print("–¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò RSS + GIGACHAT")
    print("=" * 70)
    
    parser = SiteParser(log_level=LogLevel.INFO)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å–∞–π—Ç
    test_site = "https://vesti42.ru"
    keyword = "–≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä"
    
    print(f"\n–°–∞–π—Ç: {test_site}")
    print(f"–ò—â–µ–º: '{keyword}'")
    print("-" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º RSS
    rss_data, metrics = parser.parse_rss_feed(test_site)
    
    if rss_data:
        # –ò—â–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
        search_results = parser.search_in_rss(rss_data, [keyword])
        found_items = search_results.get(keyword, [])
        
        if found_items:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(found_items)} –Ω–æ–≤–æ—Å—Ç–µ–π —Å '{keyword}'")
            print("\n–ü–†–ò–ú–ï–† –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –í GIGACHAT:")
            print("-" * 40)
            
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
            first_news = found_items[0]
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è GigaChat
            context = f"""
–ó–∞–≥–æ–ª–æ–≤–æ–∫: {first_news['title']}
–û–ø–∏—Å–∞–Ω–∏–µ: {first_news['description']}
–°—Å—ã–ª–∫–∞: {first_news['link']}
–î–∞—Ç–∞: {first_news['pubDate']}
"""
            print(context)
            print("-" * 40)
            print("\n–≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ GigaChat –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!")
            print("–†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:", len(context), "—Å–∏–º–≤–æ–ª–æ–≤")
            print("–≠–∫–æ–Ω–æ–º–∏—è —Ç–æ–∫–µ–Ω–æ–≤: ~95% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø–æ–ª–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π")
        else:
            print(f"‚ùå '{keyword}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ RSS")
    else:
        print("‚ùå RSS –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å")

def compare_all_modes():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤ –ø–æ–∏—Å–∫–∞"""
    
    print("\n" + "=" * 70)
    print("–°–†–ê–í–ù–ï–ù–ò–ï –í–°–ï–• –†–ï–ñ–ò–ú–û–í –ü–û–ò–°–ö–ê")
    print("=" * 70)
    
    parser = SiteParser(log_level=LogLevel.WARNING)  # –ú–µ–Ω—å—à–µ –ª–æ–≥–æ–≤
    test_site = "https://vesti42.ru"
    
    print(f"\n–¢–µ—Å—Ç–æ–≤—ã–π —Å–∞–π—Ç: {test_site}")
    print("-" * 50)
    
    results = {}
    
    # 1. RSS —Ä–µ–∂–∏–º
    print("\n1Ô∏è‚É£ RSS –†–ï–ñ–ò–ú...")
    start = time.time()
    rss_data, rss_metrics = parser.parse_rss_feed(test_site)
    rss_time = time.time() - start
    rss_size = sum(len(item.get('full_text', '')) for item in rss_data.get('items', [])) if rss_data else 0
    results['RSS'] = {'time': rss_time, 'size': rss_size}
    
    # 2. –ú–µ—Ç–∞-–ø–æ–∏—Å–∫ (—Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–∞—è)
    print("2Ô∏è‚É£ –ú–ï–¢–ê-–ü–û–ò–°–ö (–≥–ª–∞–≤–Ω–∞—è)...")
    start = time.time()
    meta_content, meta_metrics = parser.parse_meta_data(test_site, include_news=False)
    meta_time = time.time() - start
    meta_size = len(meta_content) if meta_content else 0
    results['–ú–µ—Ç–∞'] = {'time': meta_time, 'size': meta_size}
    
    # 3. –ú–µ—Ç–∞-–ø–æ–∏—Å–∫ (–≥–ª–∞–≤–Ω–∞—è + –Ω–æ–≤–æ—Å—Ç–∏)
    print("3Ô∏è‚É£ –ú–ï–¢–ê-–ü–û–ò–°–ö (–≥–ª–∞–≤–Ω–∞—è + –Ω–æ–≤–æ—Å—Ç–∏)...")
    start = time.time()
    meta_news_content, meta_news_metrics = parser.parse_meta_data(test_site, include_news=True)
    meta_news_time = time.time() - start
    meta_news_size = len(meta_news_content) if meta_news_content else 0
    results['–ú–µ—Ç–∞+–ù–æ–≤–æ—Å—Ç–∏'] = {'time': meta_news_time, 'size': meta_news_size}
    
    # 4. –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥
    print("4Ô∏è‚É£ –ü–û–õ–ù–´–ô –ü–ê–†–°–ò–ù–ì...")
    start = time.time()
    full_content, full_metrics = parser.parse_site(test_site)
    full_time = time.time() - start
    full_size = len(full_content) if full_content else 0
    results['–ü–æ–ª–Ω—ã–π'] = {'time': full_time, 'size': full_size}
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–û–ï –°–†–ê–í–ù–ï–ù–ò–ï:")
    print("-" * 70)
    print(f"{'–†–µ–∂–∏–º':<20} {'–í—Ä–µ–º—è (—Å–µ–∫)':<15} {'–†–∞–∑–º–µ—Ä (—Å–∏–º–≤–æ–ª–æ–≤)':<20} {'–°–∫–æ—Ä–æ—Å—Ç—å':<15}")
    print("-" * 70)
    
    for mode, data in results.items():
        if data['time'] > 0:
            speedup = results['–ü–æ–ª–Ω—ã–π']['time'] / data['time']
            speed_str = f"{speedup:.1f}x –±—ã—Å—Ç—Ä–µ–µ"
        else:
            speed_str = "N/A"
        
        print(f"{mode:<20} {data['time']:<15.2f} {data['size']:<20,} {speed_str:<15}")
    
    print("-" * 70)
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("-" * 40)
    print("üì° RSS –ø–æ–∏—Å–∫ - –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö (—Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π)")
    print("‚ö° –ú–µ—Ç–∞ (–≥–ª–∞–≤–Ω–∞—è) - –¥–ª—è –æ–±—â–µ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("üì∞ –ú–µ—Ç–∞ (–≥–ª–∞–≤–Ω–∞—è+–Ω–æ–≤–æ—Å—Ç–∏) - –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
    print("üîç –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ - —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç")

if __name__ == "__main__":
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        test_rss_search()
        test_rss_with_gigachat_integration()
        compare_all_modes()
        
        print("\n" + "=" * 70)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ RSS –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("=" * 70)
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {e}")
        import traceback
        traceback.print_exc()