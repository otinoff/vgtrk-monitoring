import streamlit as st
import pandas as pd
import time
from datetime import datetime
import json
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), 'modules'))

from modules.google_sheets import GoogleSheetsManager
from modules.site_parser import SiteParser
from modules.gigachat_client import GigaChatClient
from config.settings import GIGACHAT_API_KEY, GIGACHAT_CLIENT_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–æ–≤ —á–µ—Ä–µ–∑ Google Sheets",
    page_icon="üîç",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'parsing_results' not in st.session_state:
    st.session_state.parsing_results = []
if 'current_status' not in st.session_state:
    st.session_state.current_status = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
if 'processing' not in st.session_state:
    st.session_state.processing = False
if 'logs' not in st.session_state:
    st.session_state.logs = []

def log_message(message: str, level: str = "info"):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    timestamp = datetime.now().strftime("%H:%M:%S")
    log_entry = {
        'timestamp': timestamp,
        'message': message,
        'level': level
    }
    st.session_state.logs.append(log_entry)
    
    # –í—ã–≤–æ–¥–∏–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≤–∏–¥–∂–µ—Ç Streamlit
    if level == "error":
        st.error(f"[{timestamp}] {message}")
    elif level == "warning":
        st.warning(f"[{timestamp}] {message}")
    elif level == "success":
        st.success(f"[{timestamp}] {message}")
    else:
        st.info(f"[{timestamp}] {message}")

def main():
    st.title("ü§ñ –ê–¥–º–∏–Ω–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤")
    st.markdown("---")
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # URL Google —Ç–∞–±–ª–∏—Ü—ã
        spreadsheet_url = st.text_input(
            "URL Google —Ç–∞–±–ª–∏—Ü—ã",
            placeholder="https://docs.google.com/spreadsheets/d/...",
            help="–í—Å—Ç–∞–≤—å—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã —Å —Å–∞–π—Ç–∞–º–∏"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ GigaChat
        st.subheader("ü§ñ GigaChat")
        gigachat_model = st.selectbox(
            "–ú–æ–¥–µ–ª—å", 
            ["GigaChat", "GigaChat-Pro"],
            index=0
        )
        
        temperature = st.slider(
            "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", 
            0.1, 1.0, 0.7, 0.1,
            help="–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤"
        )
        
        # –î–∏–∞–ø–∞–∑–æ–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏
        st.subheader("üìä –î–∏–∞–ø–∞–∑–æ–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        start_row = st.number_input(
            "–û—Ç —Å—Ç—Ä–æ–∫–∏", 
            min_value=1, 
            value=1,
            help="–° –∫–∞–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É"
        )
        
        end_row = st.number_input(
            "–î–æ —Å—Ç—Ä–æ–∫–∏", 
            min_value=start_row, 
            value=100,
            help="–ü–æ –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å"
        )
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        st.markdown("---")
        col1, col2 = st.columns(2)
        
        with col1:
            start_button = st.button(
                "üöÄ –ù–∞—á–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥",
                type="primary",
                disabled=st.session_state.processing,
                use_container_width=True
            )
        
        with col2:
            stop_button = st.button(
                "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
                disabled=not st.session_state.processing,
                use_container_width=True
            )
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.subheader("üìã –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if st.session_state.processing:
            progress_bar = st.progress(0)
            status_text = st.empty()
            status_text.info(f"üîÑ {st.session_state.current_status}")
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if start_button and spreadsheet_url:
            st.session_state.processing = True
            st.session_state.current_status = "–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏..."
            st.rerun()
            
        if stop_button:
            st.session_state.processing = False
            st.session_state.current_status = "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
            st.rerun()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if st.session_state.processing and spreadsheet_url:
            process_sites(
                spreadsheet_url, 
                gigachat_model, 
                temperature, 
                start_row, 
                end_row
            )
    
    with col2:
        st.subheader("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        
        # –ú–µ—Ç—Ä–∏–∫–∏
        total_processed = len([r for r in st.session_state.parsing_results if r.get('status') == 'completed'])
        total_errors = len([r for r in st.session_state.parsing_results if r.get('status') == 'error'])
        
        st.metric("–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–∞–π—Ç–æ–≤", total_processed)
        st.metric("–û—à–∏–±–æ–∫", total_errors)
        
        # –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
        st.info(f"üîÑ {st.session_state.current_status}")
    
    # –õ–æ–≥–∏
    st.markdown("---")
    st.subheader("üìù –õ–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤
    log_container = st.container()
    with log_container:
        for log in st.session_state.logs[-50:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞–ø–∏—Å–µ–π
            if log['level'] == "error":
                st.error(f"[{log['timestamp']}] {log['message']}")
            elif log['level'] == "warning":
                st.warning(f"[{log['timestamp']}] {log['message']}")
            elif log['level'] == "success":
                st.success(f"[{log['timestamp']}] {log['message']}")
            else:
                st.info(f"[{log['timestamp']}] {log['message']}")
    
    # –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–∏–º –ª–æ–≥–∞–º
    st.markdown("<script>window.scrollTo(0, document.body.scrollHeight);</script>", unsafe_allow_html=True)

def process_sites(spreadsheet_url: str, model: str, temperature: float, start_row: int, end_row: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤ –∏–∑ Google —Ç–∞–±–ª–∏—Ü—ã"""
    try:
        log_message("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∞–π—Ç–æ–≤", "info")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        sheets_manager = GoogleSheetsManager("config/credentials.json")
        site_parser = SiteParser()
        gigachat_client = GigaChatClient(GIGACHAT_API_KEY, GIGACHAT_CLIENT_ID, model, temperature)
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
        log_message("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets...", "info")
        sheet_data = sheets_manager.read_sites_sheet(spreadsheet_url, start_row, end_row)
        
        if not sheet_data:
            log_message("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets", "error")
            st.session_state.processing = False
            return
        
        total_sites = len(sheet_data)
        log_message(f"–ü–æ–ª—É—á–µ–Ω–æ {total_sites} —Å–∞–π—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "success")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Å–∞–π—Ç–∞
        for idx, site_info in enumerate(sheet_data):
            if not st.session_state.processing:
                log_message("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "warning")
                break
            
            site_url = site_info.get('url')
            site_theme = site_info.get('theme', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
            row_index = site_info.get('row_index')
            
            log_message(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–∞ {idx+1}/{total_sites}: {site_url}", "info")
            st.session_state.current_status = f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–∞ {idx+1}/{total_sites}: {site_url}"
            
            try:
                # –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞
                parsed_content = site_parser.parse_site(site_url)
                
                if parsed_content:
                    # –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é GigaChat
                    analysis_result = gigachat_client.analyze_content(parsed_content, site_theme)
                    
                    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                    result = {
                        'url': site_url,
                        'theme': site_theme,
                        'content': parsed_content[:500] + "..." if len(parsed_content) > 500 else parsed_content,
                        'analysis': analysis_result,
                        'status': 'completed',
                        'timestamp': datetime.now().isoformat()
                    }
                    
                    st.session_state.parsing_results.append(result)
                    log_message(f"–°–∞–π—Ç {site_url} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω", "success")
                    
                    # –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ Google Sheets
                    sheets_manager.write_analysis_result(spreadsheet_url, row_index, analysis_result, "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã")
                else:
                    # –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞
                    result = {
                        'url': site_url,
                        'theme': site_theme,
                        'content': '',
                        'analysis': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–∞–π—Ç–∞',
                        'status': 'error',
                        'timestamp': datetime.now().isoformat()
                    }
                    
                    st.session_state.parsing_results.append(result)
                    log_message(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–∞ {site_url}", "error")
                    
                    # –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ Google Sheets
                    sheets_manager.write_analysis_result(spreadsheet_url, row_index, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç", "–î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
                
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                progress = (idx + 1) / total_sites
                st.progress(progress)
                
            except Exception as e:
                log_message(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∞–π—Ç–∞ {site_url}: {str(e)}", "error")
                st.session_state.current_status = f"–û—à–∏–±–∫–∞: {str(e)}"
                
                # –ó–∞–ø–∏—Å—å –æ—à–∏–±–∫–∏ –≤ Google Sheets
                sheets_manager.write_analysis_result(spreadsheet_url, row_index, f"–û—à–∏–±–∫–∞: {str(e)}", "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                
                continue
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        st.session_state.processing = False
        st.session_state.current_status = "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        log_message("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", "success")
        
    except Exception as e:
        log_message(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}", "error")
        st.session_state.processing = False
        st.session_state.current_status = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

if __name__ == "__main__":
    main()