#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Скрипт для проверки географической согласованности данных филиалов ВГТРК
"""

import os
import sys
import sqlite3
from pathlib import Path
import re

# Добавляем путь к модулям
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Коды регионов России (автомобильные)
REGION_CODES = {
    # Центральный федеральный округ
    "Белгородская область": 31,
    "Брянская область": 32, 
    "Владимирская область": 33,
    "Воронежская область": 36,
    "Ивановская область": 37,
    "Калужская область": 40,
    "Костромская область": 44,
    "Курская область": 46,
    "Липецкая область": 48,
    "Московская область": 50,
    "Орловская область": 57,
    "Рязанская область": 62,
    "Смоленская область": 67,
    "Тамбовская область": 68,
    "Тверская область": 69,
    "Тульская область": 71,
    "Ярославская область": 76,
    "Москва": 77,
    
    # Северо-Западный федеральный округ
    "Архангельская область": 29,
    "Вологодская область": 35,
    "Калининградская область": 39,
    "Ленинградская область": 47,
    "Мурманская область": 51,
    "Новгородская область": 53,
    "Псковская область": 60,
    "Республика Карелия": 10,
    "Республика Коми": 11,
    "Санкт-Петербург": 78,
    "Ненецкий АО": 83,
    
    # Южный федеральный округ
    "Республика Адыгея": 1,
    "Республика Калмыкия": 8,
    "Краснодарский край": 23,
    "Астраханская область": 30,
    "Волгоградская область": 34,
    "Ростовская область": 61,
    "Республика Крым": 82,
    "Севастополь": 92,
    
    # Северо-Кавказский федеральный округ
    "Республика Дагестан": 5,
    "Республика Ингушетия": 6,
    "Кабардино-Балкарская Республика": 7,
    "Карачаево-Черкесская Республика": 9,
    "Республика Северная Осетия - Алания": 15,
    "Чеченская Республика": 20,
    "Ставропольский край": 26,
    
    # Приволжский федеральный округ
    "Республика Башкортостан": 2,
    "Республика Марий Эл": 12,
    "Республика Мордовия": 13,
    "Республика Татарстан": 16,
    "Удмуртская Республика": 18,
    "Чувашская Республика": 21,
    "Пермский край": 59,
    "Кировская область": 43,
    "Нижегородская область": 52,
    "Оренбургская область": 56,
    "Пензенская область": 58,
    "Самарская область": 63,
    "Саратовская область": 64,
    "Ульяновская область": 73,
    
    # Уральский федеральный округ
    "Курганская область": 45,
    "Свердловская область": 66,
    "Тюменская область": 72,
    "Челябинская область": 74,
    "Ханты-Мансийский АО": 86,
    "Ямало-Ненецкий АО": 89,
    
    # Сибирский федеральный округ
    "Республика Алтай": 4,
    "Республика Тыва": 17,
    "Республика Хакасия": 19,
    "Алтайский край": 22,
    "Красноярский край": 24,
    "Иркутская область": 38,
    "Кемеровская область": 42,  # Кузбасс
    "Новосибирская область": 54,
    "Омская область": 55,
    "Томская область": 70,
    
    # Дальневосточный федеральный округ
    "Республика Бурятия": 3,
    "Республика Саха (Якутия)": 14,
    "Забайкальский край": 75,
    "Камчатский край": 41,
    "Приморский край": 25,
    "Хабаровский край": 27,
    "Амурская область": 28,
    "Магаданская область": 49,
    "Сахалинская область": 65,
    "Еврейская автономная область": 79,
    "Чукотский автономный округ": 87,
}

# Маппинг ГТРК к регионам
GTRK_TO_REGION = {
    "ГТРК \"Адыгея\"": "Республика Адыгея",
    "ГТРК \"Алания\"": "Республика Северная Осетия - Алания",
    "ГТРК \"Алтай\"": "Алтайский край",
    "ГТРК \"Амур\"": "Амурская область",
    "ГТРК \"Башкортостан\"": "Республика Башкортостан",
    "ГТРК \"Белгород\"": "Белгородская область",
    "ГТРК \"Бира\"": "Еврейская автономная область",
    "ГТРК \"Брянск\"": "Брянская область",
    "ГТРК \"Бурятия\"": "Республика Бурятия",
    "ГТРК \"Вайнах\"": "Чеченская Республика",
    "ГТРК \"Владивосток\"": "Приморский край",
    "ГТРК \"Владимир\"": "Владимирская область",
    "ГТРК \"Волга\"": "Ульяновская область",
    "ГТРК \"Волгоград-ТРВ\"": "Волгоградская область",
    "ГТРК \"Вологда\"": "Вологодская область",
    "ГТРК \"Воронеж\"": "Воронежская область",
    "ГТРК \"Вятка\"": "Кировская область",
    "ГТРК \"Горный Алтай\"": "Республика Алтай",
    "ГТРК \"Дагестан\"": "Республика Дагестан",
    "ГТРК \"Дальневосточная\"": "Хабаровский край",
    "ГТРК \"Дон-ТР\"": "Ростовская область",
    "ГТРК \"Ивтелерадио\"": "Ивановская область",
    "ГТРК \"Ингушетия\"": "Республика Ингушетия",
    "ГТРК \"Иркутск\"": "Иркутская область",
    "ГТРК \"Иртыш\"": "Омская область",
    "ГТРК \"Кабардино-Балкария\"": "Кабардино-Балкарская Республика",
    "ГТРК \"Калининград\"": "Калининградская область",
    "ГТРК \"Калмыкия\"": "Республика Калмыкия",
    "ГТРК \"Калуга\"": "Калужская область",
    "ГТРК \"Камчатка\"": "Камчатский край",
    "ГТРК \"Карачаево-Черкесия\"": "Карачаево-Черкесская Республика",
    "ГТРК \"Карелия\"": "Республика Карелия",
    "ГТРК \"Коми Гор\"": "Республика Коми",
    "ГТРК \"Кострома\"": "Костромская область",
    "ГТРК \"Красноярск\"": "Красноярский край",
    "ГТРК \"Кубань\"": "Краснодарский край",
    "ГТРК \"Кузбасс\"": "Кемеровская область",
    "ГТРК \"Курган\"": "Курганская область",
    "ГТРК \"Курск\"": "Курская область",
    "ГТРК \"Липецк\"": "Липецкая область",
    "ГТРК \"Лотос\"": "Астраханская область",
    "ГТРК \"Магадан\"": "Магаданская область",
    "ГТРК \"Марий Эл\"": "Республика Марий Эл",
    "ГТРК \"Мордовия\"": "Республика Мордовия",
    "ГТРК \"Мурман\"": "Мурманская область",
    "ГТРК \"Нижний Новгород\"": "Нижегородская область",
    "ГТРК \"Новосибирск\"": "Новосибирская область",
    "ГТРК \"Ока\"": "Рязанская область",
    "ГТРК \"Орел\"": "Орловская область",
    "ГТРК \"Оренбург\"": "Оренбургская область",
    "ГТРК \"Пенза\"": "Пензенская область",
    "ГТРК \"Пермь\"": "Пермский край",
    "ГТРК \"Поморье\"": "Архангельская область",
    "ГТРК \"Псков\"": "Псковская область",
    "ГТРК \"Регион-Тюмень\"": "Тюменская область",
    "ГТРК \"Самара\"": "Самарская область",
    "ГТРК \"Санкт-Петербург\"": "Санкт-Петербург",
    "ГТРК \"Саратов\"": "Саратовская область",
    "ГТРК \"Саха\"": "Республика Саха (Якутия)",
    "ГТРК \"Сахалин\"": "Сахалинская область",
    "ГТРК \"Севастополь\"": "Севастополь",
    "ГТРК \"Славия\"": "Новгородская область",
    "ГТРК \"Смоленск\"": "Смоленская область",
    "ГТРК \"Ставрополь\"": "Ставропольский край",
    "ГТРК \"Таврида\"": "Республика Крым",
    "ГТРК \"Тамбов\"": "Тамбовская область",
    "ГТРК \"Татарстан\"": "Республика Татарстан",
    "ГТРК \"Тверь\"": "Тверская область",
    "ГТРК \"Томск\"": "Томская область",
    "ГТРК \"Тула\"": "Тульская область",
    "ГТРК \"Тыва\"": "Республика Тыва",
    "ГТРК \"Удмуртия\"": "Удмуртская Республика",
    "ГТРК \"Урал\"": "Свердловская область",
    "ГТРК \"Хакасия\"": "Республика Хакасия",
    "ГТРК \"Чита\"": "Забайкальский край",
    "ГТРК \"Чувашия\"": "Чувашская Республика",
    "ГТРК \"Чукотка\"": "Чукотский автономный округ",
    "ГТРК \"Югория\"": "Ханты-Мансийский АО",
    "ГТРК \"Южный Урал\"": "Челябинская область",
    "ГТРК \"Ямал\"": "Ямало-Ненецкий АО",
    "ГТРК \"Ярославия\"": "Ярославская область",
}

def check_geo_consistency():
    """Проверка географической согласованности данных"""
    
    # Путь к базе данных
    db_path = Path(__file__).parent / "data" / "vgtrk_monitoring.db"
    
    if not db_path.exists():
        print(f"[ERROR] База данных не найдена: {db_path}")
        return
    
    # Подключение к БД
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # Получаем все филиалы с их регионами
        cursor.execute("""
            SELECT id, name, region, federal_district
            FROM filials 
            ORDER BY id
        """)
        filials = cursor.fetchall()
        
        print("=" * 80)
        print("АНАЛИЗ ГЕОГРАФИЧЕСКОЙ СОГЛАСОВАННОСТИ ФИЛИАЛОВ ВГТРК")
        print("=" * 80)
        
        errors = []
        
        for idx, (filial_id, name, region, district) in enumerate(filials, 1):
            # Очищаем название от дополнительных пометок
            clean_name = name.split(" (из")[0]
            
            # Находим соответствующий регион
            expected_region = GTRK_TO_REGION.get(clean_name)
            
            if expected_region:
                # Получаем код региона
                region_code = REGION_CODES.get(expected_region)
                
                print(f"\n{idx:3}. {name}")
                print(f"     Регион в БД: {region}")
                print(f"     Ожидаемый регион: {expected_region}")
                print(f"     Код региона: {region_code if region_code else 'НЕ НАЙДЕН'}")
                print(f"     Округ: {district}")
                
                # Проверяем соответствие
                if expected_region.lower() not in region.lower() and region.lower() not in expected_region.lower():
                    errors.append({
                        'id': filial_id,
                        'номер': idx,
                        'название': name,
                        'регион_в_бд': region,
                        'правильный_регион': expected_region,
                        'код_региона': region_code
                    })
                    print(f"     [!] НЕСООТВЕТСТВИЕ РЕГИОНА!")
            else:
                print(f"\n{idx:3}. {name}")
                print(f"     Регион в БД: {region}")
                print(f"     [?] Нет маппинга для этого филиала")
        
        # Выводим сводку ошибок
        print("\n" + "=" * 80)
        print("НАЙДЕННЫЕ ОШИБКИ И НЕСООТВЕТСТВИЯ:")
        print("=" * 80)
        
        if errors:
            for err in errors:
                print(f"\n[X] Ошибка #{err['номер']} (ID: {err['id']})")
                print(f"   Филиал: {err['название']}")
                print(f"   Регион в БД: {err['регион_в_бд']}")
                print(f"   Должен быть: {err['правильный_регион']}")
                print(f"   Код региона: {err['код_региона']}")
        else:
            print("\n[OK] Все филиалы имеют корректные регионы!")
        
        # Анализ по Кузбассу и Новосибирску
        print("\n" + "=" * 80)
        print("СПЕЦИАЛЬНЫЙ АНАЛИЗ: КУЗБАСС И НОВОСИБИРСК")
        print("=" * 80)
        
        cursor.execute("""
            SELECT name, region FROM filials 
            WHERE name LIKE '%Кузбасс%' OR name LIKE '%Новосибирск%'
        """)
        special = cursor.fetchall()
        
        for name, region in special:
            if "Кузбасс" in name:
                print(f"\n{name}")
                print(f"  Регион: {region}")
                print(f"  Код региона Кемеровской области (Кузбасс): 42")
            elif "Новосибирск" in name:
                print(f"\n{name}")
                print(f"  Регион: {region}")
                print(f"  Код региона Новосибирской области: 54")
        
        print("\n[i] Примечание: Кузбасс (код 42) и Новосибирск (код 54) имеют разные коды регионов!")
        
    except Exception as e:
        print(f"[ERROR] Ошибка анализа: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    check_geo_consistency()